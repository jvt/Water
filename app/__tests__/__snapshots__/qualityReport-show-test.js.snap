exports[`QualityReportShow BackButton 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hitSlop={undefined}
  isTVSelectable={true}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "stretch",
      "borderRadius": 8,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 44,
      "justifyContent": "center",
      "marginBottom": 10,
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
          "fontSize": 18,
          "textAlign": "center",
        },
        undefined,
      ]
    }>
    Back
  </Text>
</View>
`;

exports[`QualityReportShow ConditionText 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  ellipsizeMode="tail"
  style={Object {}}>
  Condition:
</Text>
`;

exports[`QualityReportShow ContaminantPPMText 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  ellipsizeMode="tail"
  style={Object {}}>
  ContaminantPPM:
</Text>
`;

exports[`QualityReportShow FacebookShareText 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  ellipsizeMode="tail"
  style={Object {}}>
  Share on Facebook
</Text>
`;

exports[`QualityReportShow LoadingText 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  ellipsizeMode="tail"
  style={Object {}}>
  Loading...
</Text>
`;

exports[`QualityReportShow NewButton 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hitSlop={undefined}
  isTVSelectable={true}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "stretch",
      "borderRadius": 8,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 44,
      "justifyContent": "center",
      "marginBottom": 10,
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
          "fontSize": 18,
          "textAlign": "center",
        },
        undefined,
      ]
    }>
    New
  </Text>
</View>
`;

exports[`QualityReportShow ReportedDateText 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  ellipsizeMode="tail"
  style={Object {}}>
  Reported:
</Text>
`;

exports[`QualityReportShow TitleText 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  ellipsizeMode="tail"
  style={Object {}}>
  Water Condition
</Text>
`;

exports[`QualityReportShow TwitterShareText 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  ellipsizeMode="tail"
  style={Object {}}>
  Share on Twitter
</Text>
`;

exports[`QualityReportShow UnknownConditionText 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  ellipsizeMode="tail"
  style={Object {}}>
  Unknown Condition
</Text>
`;

exports[`QualityReportShow VirusPPMText 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  ellipsizeMode="tail"
  style={Object {}}>
  VirusPPM:
</Text>
`;

exports[`QualityReportShow YearPicker 1`] = `
<View
  style={Object {}}>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0.7)",
            "height": 1334,
            "width": 750,
          },
          Object {},
        ]
      }>
      <View
        style={
          Object {
            "backgroundColor": "rgba(255,255,255,0.8)",
            "borderRadius": 5,
            "height": 400,
            "left": 75,
            "top": 467,
            "width": 600,
          }
        }>
        <RCTScrollView>
          <View>
            <View
              style={
                Object {
                  "paddingHorizontal": 10,
                }
              } />
          </View>
        </RCTScrollView>
      </View>
      <View
        style={
          Object {
            "left": 75,
            "top": 477,
          }
        }>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(255,255,255,0.8)",
                  "borderRadius": 5,
                  "padding": 8,
                  "width": 600,
                },
                Object {},
              ]
            }>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#333",
                    "fontSize": 16,
                    "textAlign": "center",
                  },
                  Object {},
                ]
              }>
              cancel
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}>
    <View
      style={
        Array [
          Object {
            "borderColor": "#ccc",
            "borderRadius": 5,
            "borderWidth": 1,
            "flex": 1,
            "padding": 8,
          },
          Object {},
        ]
      }>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#333",
              "fontSize": 16,
              "textAlign": "center",
            },
            undefined,
          ]
        }>
        Select me!
      </Text>
    </View>
  </View>
</View>
`;
